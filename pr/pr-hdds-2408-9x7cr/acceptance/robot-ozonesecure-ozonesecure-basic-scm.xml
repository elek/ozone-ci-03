<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191106 17:05:20.117" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozonesecure-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:20.178" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:20.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:20.184" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191106 17:05:20.184" starttime="20191106 17:05:20.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:20.186" level="INFO">scm</msg>
<status status="PASS" endtime="20191106 17:05:20.186" starttime="20191106 17:05:20.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:20.187" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:20.187" starttime="20191106 17:05:20.186"></status>
</kw>
<msg timestamp="20191106 17:05:20.188" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191106 17:05:20.188" starttime="20191106 17:05:20.176"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:20.192" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:20.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:20.209" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191106 17:05:20.209" starttime="20191106 17:05:20.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:20.211" level="INFO"></msg>
<status status="PASS" endtime="20191106 17:05:20.211" starttime="20191106 17:05:20.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:20.212" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:20.212" starttime="20191106 17:05:20.211"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:20.213" starttime="20191106 17:05:20.189"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:20.213" starttime="20191106 17:05:20.188"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:20.213" starttime="20191106 17:05:20.175"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:20.213" starttime="20191106 17:05:20.174"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:20.216" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:20.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:20.266" level="INFO">${output} = HTTP/1.1 401 Authentication required
Date: Wed, 06 Nov 2019 17:05:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191106 17:05:20.266" starttime="20191106 17:05:20.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:20.267" level="INFO">HTTP/1.1 401 Authentication required
Date: Wed, 06 Nov 2019 17:05:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 293

HTTP/1.1 200 OK
Date: Wed, 06 Nov 2019 17:05:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCBslgUK+0PeGp50nCCmw7VIYsHSv8XfnXPPZGWhugi7Y1dUnuM8oIXVKALMlBYoULQDYJOOOJs4rUcPTU5ENdNzSD
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1573095920255&amp;s=gNH3xf8zAw/WKCS2A0YDWLLN0zipUu2BKtpVyxHgOrw="; Path=/; HttpOnly
Last-Modified: Wed, 06 Nov 2019 16:19:56 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20191106 17:05:20.268" starttime="20191106 17:05:20.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:20.268" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:20.269" starttime="20191106 17:05:20.268"></status>
</kw>
<msg timestamp="20191106 17:05:20.269" level="INFO">${result} = HTTP/1.1 401 Authentication required
Date: Wed, 06 Nov 2019 17:05:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191106 17:05:20.269" starttime="20191106 17:05:20.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20191106 17:05:20.270" starttime="20191106 17:05:20.269"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:20.270" critical="yes" starttime="20191106 17:05:20.174"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:20.275" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:23.283" level="INFO">${rc} = 255</msg>
<msg timestamp="20191106 17:05:23.283" level="INFO">${output} = 2019-11-06 17:05:21,261 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-11-06 17:05:21,439 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s)...</msg>
<status status="PASS" endtime="20191106 17:05:23.283" starttime="20191106 17:05:20.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:23.285" level="INFO">2019-11-06 17:05:21,261 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-11-06 17:05:21,439 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2019-11-06 17:05:21,440 INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2019-11-06 17:05:23,214 ERROR client.OzoneClientFactory: Couldn't create RpcClient protocol exception: 
INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: DestHost:destPort scm:9860 , LocalHost:localPort om/172.19.0.6:0. Failed on local exception: java.io.IOException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Failed to find any Kerberos tgt)]
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.handleError(OzoneManagerProtocolClientSideTranslatorPB.java:758)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.hdds.tracing.TraceAllMethod.invoke(TraceAllMethod.java:66)
	at com.sun.proxy.$Proxy21.getServiceInfo(Unknown Source)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:156)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:256)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:239)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClient(OzoneClientFactory.java:75)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.init(RandomKeyGenerator.java:242)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.call(RandomKeyGenerator.java:264)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.call(RandomKeyGenerator.java:82)
	at picocli.CommandLine.execute(CommandLine.java:1173)
	at picocli.CommandLine.access$800(CommandLine.java:141)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1367)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1335)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1243)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:1526)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:1465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:65)
	at org.apache.hadoop.ozone.freon.Freon.execute(Freon.java:64)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:56)
	at org.apache.hadoop.ozone.freon.Freon.main(Freon.java:90)
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191106 17:05:23.285" starttime="20191106 17:05:23.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:23.286" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191106 17:05:23.287" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191106 17:05:23.287" starttime="20191106 17:05:23.286"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:23.288" starttime="20191106 17:05:20.272"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:23.288" critical="yes" starttime="20191106 17:05:20.271">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20191106 17:05:23.289" starttime="20191106 17:05:20.146"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191106 17:05:23.302" level="INFO">${random} = 46609</msg>
<status status="PASS" endtime="20191106 17:05:23.302" starttime="20191106 17:05:23.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191106 17:05:23.303" level="INFO">${prefix} = 46609</msg>
<status status="PASS" endtime="20191106 17:05:23.303" starttime="20191106 17:05:23.302"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:23.303" starttime="20191106 17:05:23.301"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:23.309" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:23.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:23.314" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191106 17:05:23.315" starttime="20191106 17:05:23.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:23.316" level="INFO">scm</msg>
<status status="PASS" endtime="20191106 17:05:23.316" starttime="20191106 17:05:23.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:23.317" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:23.317" starttime="20191106 17:05:23.316"></status>
</kw>
<msg timestamp="20191106 17:05:23.318" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191106 17:05:23.318" starttime="20191106 17:05:23.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191106 17:05:23.320" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191106 17:05:23.320" starttime="20191106 17:05:23.318"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:23.324" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:23.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:23.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191106 17:05:23.337" starttime="20191106 17:05:23.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:23.339" level="INFO"></msg>
<status status="PASS" endtime="20191106 17:05:23.340" starttime="20191106 17:05:23.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:23.341" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:23.341" starttime="20191106 17:05:23.340"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:23.342" starttime="20191106 17:05:23.321"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:23.342" starttime="20191106 17:05:23.320"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:23.342" starttime="20191106 17:05:23.305"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:23.342" starttime="20191106 17:05:23.305"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:23.347" level="INFO">Running command 'ozone sh volume info o3://om:9862/46609-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:25.480" level="INFO">${rc} = 255</msg>
<msg timestamp="20191106 17:05:25.480" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191106 17:05:25.480" starttime="20191106 17:05:23.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:25.481" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191106 17:05:25.482" starttime="20191106 17:05:25.481"></status>
</kw>
<msg timestamp="20191106 17:05:25.482" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191106 17:05:25.482" starttime="20191106 17:05:23.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<msg timestamp="20191106 17:05:25.483" level="FAIL">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20191106 17:05:25.483" starttime="20191106 17:05:25.482"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:25.484" starttime="20191106 17:05:23.343"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191106 17:05:25.484" critical="yes" starttime="20191106 17:05:23.303">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:25.489" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:25.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:25.497" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191106 17:05:25.497" starttime="20191106 17:05:25.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:25.499" level="INFO">scm</msg>
<status status="PASS" endtime="20191106 17:05:25.499" starttime="20191106 17:05:25.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:25.500" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:25.500" starttime="20191106 17:05:25.499"></status>
</kw>
<msg timestamp="20191106 17:05:25.501" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191106 17:05:25.501" starttime="20191106 17:05:25.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191106 17:05:25.502" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191106 17:05:25.502" starttime="20191106 17:05:25.501"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:25.507" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:25.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:25.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191106 17:05:25.524" starttime="20191106 17:05:25.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:25.525" level="INFO"></msg>
<status status="PASS" endtime="20191106 17:05:25.526" starttime="20191106 17:05:25.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:25.527" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:25.527" starttime="20191106 17:05:25.526"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:25.527" starttime="20191106 17:05:25.504"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:25.527" starttime="20191106 17:05:25.503"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:25.528" starttime="20191106 17:05:25.486"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:25.528" starttime="20191106 17:05:25.486"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:25.533" level="INFO">Running command 'ozone sh volume create o3://om:9862/46609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:27.784" level="INFO">${rc} = 255</msg>
<msg timestamp="20191106 17:05:27.784" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191106 17:05:27.784" starttime="20191106 17:05:25.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:27.786" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191106 17:05:27.786" starttime="20191106 17:05:27.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:27.786" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191106 17:05:27.787" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191106 17:05:27.787" starttime="20191106 17:05:27.786"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:27.787" starttime="20191106 17:05:25.529"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:27.787" starttime="20191106 17:05:25.528"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191106 17:05:27.788" critical="yes" starttime="20191106 17:05:25.485">255 != 0</status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:27.792" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:27.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:27.797" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191106 17:05:27.797" starttime="20191106 17:05:27.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:27.798" level="INFO">scm</msg>
<status status="PASS" endtime="20191106 17:05:27.799" starttime="20191106 17:05:27.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:27.800" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:27.800" starttime="20191106 17:05:27.799"></status>
</kw>
<msg timestamp="20191106 17:05:27.800" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191106 17:05:27.800" starttime="20191106 17:05:27.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191106 17:05:27.801" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191106 17:05:27.801" starttime="20191106 17:05:27.801"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:27.805" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:27.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:27.817" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191106 17:05:27.817" starttime="20191106 17:05:27.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:27.818" level="INFO"></msg>
<status status="PASS" endtime="20191106 17:05:27.819" starttime="20191106 17:05:27.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:27.819" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:27.819" starttime="20191106 17:05:27.819"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:27.820" starttime="20191106 17:05:27.802"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:27.820" starttime="20191106 17:05:27.802"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:27.820" starttime="20191106 17:05:27.790"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:27.820" starttime="20191106 17:05:27.789"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:27.823" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:29.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20191106 17:05:29.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191106 17:05:29.990" starttime="20191106 17:05:27.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:29.992" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191106 17:05:29.992" starttime="20191106 17:05:29.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:29.993" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191106 17:05:29.994" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191106 17:05:29.994" starttime="20191106 17:05:29.993"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:29.994" starttime="20191106 17:05:27.821"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:29.995" starttime="20191106 17:05:27.820"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191106 17:05:29.995" critical="yes" starttime="20191106 17:05:27.788">255 != 0</status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:30.002" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:30.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:30.010" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191106 17:05:30.010" starttime="20191106 17:05:30.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:30.012" level="INFO">scm</msg>
<status status="PASS" endtime="20191106 17:05:30.012" starttime="20191106 17:05:30.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:30.013" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:30.014" starttime="20191106 17:05:30.012"></status>
</kw>
<msg timestamp="20191106 17:05:30.014" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191106 17:05:30.014" starttime="20191106 17:05:29.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191106 17:05:30.016" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191106 17:05:30.016" starttime="20191106 17:05:30.015"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:30.021" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:31.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:31.253" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191106 17:05:31.253" starttime="20191106 17:05:30.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:31.256" level="INFO"></msg>
<status status="PASS" endtime="20191106 17:05:31.256" starttime="20191106 17:05:31.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:31.257" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:31.258" starttime="20191106 17:05:31.256"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:31.258" starttime="20191106 17:05:30.018"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:31.258" starttime="20191106 17:05:30.017"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:31.259" starttime="20191106 17:05:29.998"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:31.259" starttime="20191106 17:05:29.997"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:31.265" level="INFO">Running command 'ozone sh key put o3://om:9862/46609-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:33.558" level="INFO">${rc} = 255</msg>
<msg timestamp="20191106 17:05:33.558" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191106 17:05:33.558" starttime="20191106 17:05:31.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:33.559" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191106 17:05:33.559" starttime="20191106 17:05:33.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:33.560" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191106 17:05:33.561" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191106 17:05:33.561" starttime="20191106 17:05:33.560"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:33.561" starttime="20191106 17:05:31.260"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:33.561" starttime="20191106 17:05:31.259"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191106 17:05:33.561" critical="yes" starttime="20191106 17:05:29.996">255 != 0</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:33.566" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:33.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:33.573" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191106 17:05:33.573" starttime="20191106 17:05:33.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:33.575" level="INFO">scm</msg>
<status status="PASS" endtime="20191106 17:05:33.575" starttime="20191106 17:05:33.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:33.575" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:33.576" starttime="20191106 17:05:33.575"></status>
</kw>
<msg timestamp="20191106 17:05:33.576" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191106 17:05:33.576" starttime="20191106 17:05:33.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191106 17:05:33.577" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191106 17:05:33.577" starttime="20191106 17:05:33.576"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:33.580" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:33.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:33.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191106 17:05:33.597" starttime="20191106 17:05:33.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:33.598" level="INFO"></msg>
<status status="PASS" endtime="20191106 17:05:33.599" starttime="20191106 17:05:33.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:33.600" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:33.600" starttime="20191106 17:05:33.599"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:33.600" starttime="20191106 17:05:33.578"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:33.600" starttime="20191106 17:05:33.577"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:33.600" starttime="20191106 17:05:33.563"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:33.600" starttime="20191106 17:05:33.563"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:33.604" level="INFO">Running command 'ozone sh volume info o3:///46609-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:35.775" level="INFO">${rc} = 255</msg>
<msg timestamp="20191106 17:05:35.775" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191106 17:05:35.775" starttime="20191106 17:05:33.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:35.777" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191106 17:05:35.777" starttime="20191106 17:05:35.776"></status>
</kw>
<msg timestamp="20191106 17:05:35.777" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191106 17:05:35.777" starttime="20191106 17:05:33.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<msg timestamp="20191106 17:05:35.778" level="FAIL">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20191106 17:05:35.779" starttime="20191106 17:05:35.778"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:35.779" starttime="20191106 17:05:33.601"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191106 17:05:35.779" critical="yes" starttime="20191106 17:05:33.562">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:35.785" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:35.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:35.790" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191106 17:05:35.790" starttime="20191106 17:05:35.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:35.791" level="INFO">scm</msg>
<status status="PASS" endtime="20191106 17:05:35.792" starttime="20191106 17:05:35.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:35.792" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:35.793" starttime="20191106 17:05:35.792"></status>
</kw>
<msg timestamp="20191106 17:05:35.793" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191106 17:05:35.793" starttime="20191106 17:05:35.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191106 17:05:35.794" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191106 17:05:35.794" starttime="20191106 17:05:35.793"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:35.798" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:35.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20191106 17:05:35.812" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191106 17:05:35.812" starttime="20191106 17:05:35.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:35.813" level="INFO"></msg>
<status status="PASS" endtime="20191106 17:05:35.813" starttime="20191106 17:05:35.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191106 17:05:35.814" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191106 17:05:35.814" starttime="20191106 17:05:35.814"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:35.815" starttime="20191106 17:05:35.795"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:35.815" starttime="20191106 17:05:35.795"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:35.815" starttime="20191106 17:05:35.782"></status>
</kw>
<status status="PASS" endtime="20191106 17:05:35.815" starttime="20191106 17:05:35.781"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191106 17:05:35.819" level="INFO">Running command 'ozone sh volume info /46609-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20191106 17:05:37.974" level="INFO">${rc} = 255</msg>
<msg timestamp="20191106 17:05:37.974" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191106 17:05:37.974" starttime="20191106 17:05:35.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191106 17:05:37.976" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191106 17:05:37.976" starttime="20191106 17:05:37.975"></status>
</kw>
<msg timestamp="20191106 17:05:37.977" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191106 17:05:37.977" starttime="20191106 17:05:35.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<msg timestamp="20191106 17:05:37.978" level="FAIL">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20191106 17:05:37.978" starttime="20191106 17:05:37.977"></status>
</kw>
<status status="FAIL" endtime="20191106 17:05:37.979" starttime="20191106 17:05:35.815"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191106 17:05:37.979" critical="yes" starttime="20191106 17:05:35.780">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20191106 17:05:37.981" starttime="20191106 17:05:23.292"></status>
</suite>
<status status="FAIL" endtime="20191106 17:05:37.988" starttime="20191106 17:05:20.118"></status>
</suite>
<statistics>
<total>
<stat fail="7" pass="1">Critical Tests</stat>
<stat fail="7" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="7" id="s1" name="ozonesecure-basic" pass="1">ozonesecure-basic</stat>
<stat fail="1" id="s1-s1" name="Basic" pass="1">ozonesecure-basic.Basic</stat>
<stat fail="6" id="s1-s2" name="Ozone-Shell" pass="0">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
