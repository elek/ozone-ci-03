<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191113 19:29:46.761" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop31-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:29:47.104" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:29:50.624" level="INFO">${rc} = 255</msg>
<msg timestamp="20191113 19:29:50.624" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191113 19:29:50.624" starttime="20191113 19:29:47.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:29:50.626" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191113 19:29:50.626" starttime="20191113 19:29:50.625"></status>
</kw>
<msg timestamp="20191113 19:29:50.627" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191113 19:29:50.627" starttime="20191113 19:29:47.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:29:50.632" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:29:55.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:29:55.889" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 19:29:55.889" starttime="20191113 19:29:50.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:29:55.891" level="INFO"></msg>
<status status="PASS" endtime="20191113 19:29:55.891" starttime="20191113 19:29:55.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:29:55.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:29:55.892" starttime="20191113 19:29:55.891"></status>
</kw>
<msg timestamp="20191113 19:29:55.892" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191113 19:29:55.892" starttime="20191113 19:29:50.629"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191113 19:29:55.893" starttime="20191113 19:29:55.893"></status>
</kw>
<status status="PASS" endtime="20191113 19:29:55.894" starttime="20191113 19:29:50.628"></status>
</kw>
<status status="PASS" endtime="20191113 19:29:55.894" starttime="20191113 19:29:50.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:29:55.900" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:30:02.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:30:02.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 19:30:02.348" starttime="20191113 19:29:55.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:30:02.349" level="INFO"></msg>
<status status="PASS" endtime="20191113 19:30:02.350" starttime="20191113 19:30:02.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:30:02.350" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:30:02.350" starttime="20191113 19:30:02.350"></status>
</kw>
<status status="PASS" endtime="20191113 19:30:02.351" starttime="20191113 19:29:55.895"></status>
</kw>
<status status="PASS" endtime="20191113 19:30:02.351" starttime="20191113 19:29:55.895"></status>
</kw>
<status status="PASS" endtime="20191113 19:30:02.351" starttime="20191113 19:29:55.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191113 19:30:02.352" starttime="20191113 19:30:02.351"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:30:02.355" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:30:05.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:30:05.187" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573673397991,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191113 19:30:05.188" starttime="20191113 19:30:02.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:30:05.189" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573673397991,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191113 19:30:05.189" starttime="20191113 19:30:05.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:30:05.190" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:30:05.190" starttime="20191113 19:30:05.189"></status>
</kw>
<msg timestamp="20191113 19:30:05.191" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573673397991,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191113 19:30:05.191" starttime="20191113 19:30:02.352"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191113 19:30:05.192" starttime="20191113 19:30:05.191"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:30:05.194" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:30:08.293" level="INFO">${rc} = 255</msg>
<msg timestamp="20191113 19:30:08.293" level="INFO">${output} = INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191113 19:30:08.293" starttime="20191113 19:30:05.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:30:08.295" level="INFO">INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191113 19:30:08.296" starttime="20191113 19:30:08.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:30:08.297" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191113 19:30:08.297" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191113 19:30:08.298" starttime="20191113 19:30:08.296"></status>
</kw>
<status status="FAIL" endtime="20191113 19:30:08.298" starttime="20191113 19:30:05.192"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191113 19:30:08.299" critical="yes" starttime="20191113 19:29:47.101">255 != 0</status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:30:08.304" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:30:15.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:30:15.665" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 19:30:15.666" starttime="20191113 19:30:08.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:30:15.668" level="INFO"></msg>
<status status="PASS" endtime="20191113 19:30:15.668" starttime="20191113 19:30:15.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:30:15.669" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:30:15.669" starttime="20191113 19:30:15.668"></status>
</kw>
<status status="PASS" endtime="20191113 19:30:15.670" starttime="20191113 19:30:08.301"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:30:15.673" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:30:20.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:30:20.699" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 19:30:20.699" starttime="20191113 19:30:15.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:30:20.700" level="INFO"></msg>
<status status="PASS" endtime="20191113 19:30:20.700" starttime="20191113 19:30:20.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:30:20.701" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:30:20.701" starttime="20191113 19:30:20.701"></status>
</kw>
<status status="PASS" endtime="20191113 19:30:20.701" starttime="20191113 19:30:15.670"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191113 19:30:20.702" critical="yes" starttime="20191113 19:30:08.299"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" endtime="20191113 19:30:20.703" starttime="20191113 19:29:47.026"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="1">Critical Tests</stat>
<stat fail="1" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="hadoop31-createmrenv" pass="1">hadoop31-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
