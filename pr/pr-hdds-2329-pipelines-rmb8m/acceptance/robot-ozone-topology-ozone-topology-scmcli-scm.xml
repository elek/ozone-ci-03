<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191025 18:36:52.123" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/topology/scmcli.robot" id="s1" name="ozone-topology-scmcli">
<test id="s1-t1" name="Run printTopology">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone scmcli printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191025 18:36:52.173" level="INFO">Running command 'ozone scmcli printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20191025 18:36:53.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20191025 18:36:53.662" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)    IN_SERVICE    /rack1
 10.5.0.6(ozone-topo...</msg>
<status status="PASS" endtime="20191025 18:36:53.662" starttime="20191025 18:36:52.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191025 18:36:53.664" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)    IN_SERVICE    /rack2</msg>
<status status="PASS" endtime="20191025 18:36:53.664" starttime="20191025 18:36:53.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191025 18:36:53.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191025 18:36:53.665" starttime="20191025 18:36:53.664"></status>
</kw>
<msg timestamp="20191025 18:36:53.665" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)    IN_SERVICE    /rack1
 10.5.0.6(ozone-topo...</msg>
<status status="PASS" endtime="20191025 18:36:53.666" starttime="20191025 18:36:52.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20191025 18:36:53.667" starttime="20191025 18:36:53.666"></status>
</kw>
<status status="PASS" endtime="20191025 18:36:53.667" critical="yes" starttime="20191025 18:36:52.170"></status>
</test>
<test id="s1-t2" name="Run printTopology -o">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone scmcli printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191025 18:36:53.671" level="INFO">Running command 'ozone scmcli printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20191025 18:36:55.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20191025 18:36:55.239" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" endtime="20191025 18:36:55.239" starttime="20191025 18:36:53.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191025 18:36:55.241" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" endtime="20191025 18:36:55.241" starttime="20191025 18:36:55.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191025 18:36:55.242" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191025 18:36:55.242" starttime="20191025 18:36:55.241"></status>
</kw>
<msg timestamp="20191025 18:36:55.242" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" endtime="20191025 18:36:55.242" starttime="20191025 18:36:53.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20191025 18:36:55.243" starttime="20191025 18:36:55.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
</arguments>
<status status="PASS" endtime="20191025 18:36:55.244" starttime="20191025 18:36:55.243"></status>
</kw>
<status status="PASS" endtime="20191025 18:36:55.244" critical="yes" starttime="20191025 18:36:53.667"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20191025 18:36:55.245" starttime="20191025 18:36:52.123"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology-scmcli" pass="2">ozone-topology-scmcli</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
