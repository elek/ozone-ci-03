<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191113 17:00:03.099" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop31-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 17:00:03.168" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 17:00:40.163" level="INFO">${rc} = 255</msg>
<msg timestamp="20191113 17:00:40.163" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191113 17:00:40.163" starttime="20191113 17:00:03.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 17:00:40.165" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191113 17:00:40.165" starttime="20191113 17:00:40.164"></status>
</kw>
<msg timestamp="20191113 17:00:40.166" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191113 17:00:40.166" starttime="20191113 17:00:03.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 17:00:40.171" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 17:00:46.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 17:00:46.405" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 17:00:46.405" starttime="20191113 17:00:40.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 17:00:46.406" level="INFO"></msg>
<status status="PASS" endtime="20191113 17:00:46.406" starttime="20191113 17:00:46.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 17:00:46.407" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 17:00:46.407" starttime="20191113 17:00:46.407"></status>
</kw>
<msg timestamp="20191113 17:00:46.408" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191113 17:00:46.408" starttime="20191113 17:00:40.168"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191113 17:00:46.409" starttime="20191113 17:00:46.408"></status>
</kw>
<status status="PASS" endtime="20191113 17:00:46.409" starttime="20191113 17:00:40.167"></status>
</kw>
<status status="PASS" endtime="20191113 17:00:46.409" starttime="20191113 17:00:40.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 17:00:46.416" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 17:00:49.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 17:00:49.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 17:00:49.610" starttime="20191113 17:00:46.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 17:00:49.612" level="INFO"></msg>
<status status="PASS" endtime="20191113 17:00:49.612" starttime="20191113 17:00:49.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 17:00:49.613" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 17:00:49.613" starttime="20191113 17:00:49.612"></status>
</kw>
<status status="PASS" endtime="20191113 17:00:49.613" starttime="20191113 17:00:46.410"></status>
</kw>
<status status="PASS" endtime="20191113 17:00:49.614" starttime="20191113 17:00:46.410"></status>
</kw>
<status status="PASS" endtime="20191113 17:00:49.614" starttime="20191113 17:00:46.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191113 17:00:49.615" starttime="20191113 17:00:49.614"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 17:00:49.619" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 17:00:53.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 17:00:53.770" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573664448413,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191113 17:00:53.770" starttime="20191113 17:00:49.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 17:00:53.771" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573664448413,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191113 17:00:53.772" starttime="20191113 17:00:53.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 17:00:53.773" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 17:00:53.773" starttime="20191113 17:00:53.772"></status>
</kw>
<msg timestamp="20191113 17:00:53.774" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573664448413,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191113 17:00:53.774" starttime="20191113 17:00:49.615"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191113 17:00:53.775" starttime="20191113 17:00:53.774"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 17:00:53.779" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 17:00:56.031" level="INFO">${rc} = 255</msg>
<msg timestamp="20191113 17:00:56.031" level="INFO">${output} = INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191113 17:00:56.031" starttime="20191113 17:00:53.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 17:00:56.033" level="INFO">INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191113 17:00:56.033" starttime="20191113 17:00:56.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 17:00:56.034" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191113 17:00:56.035" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191113 17:00:56.035" starttime="20191113 17:00:56.033"></status>
</kw>
<status status="FAIL" endtime="20191113 17:00:56.035" starttime="20191113 17:00:53.775"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191113 17:00:56.036" critical="yes" starttime="20191113 17:00:03.164">255 != 0</status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 17:00:56.041" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 17:01:00.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 17:01:00.814" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 17:01:00.814" starttime="20191113 17:00:56.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 17:01:00.816" level="INFO"></msg>
<status status="PASS" endtime="20191113 17:01:00.816" starttime="20191113 17:01:00.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 17:01:00.817" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 17:01:00.817" starttime="20191113 17:01:00.816"></status>
</kw>
<status status="PASS" endtime="20191113 17:01:00.817" starttime="20191113 17:00:56.038"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 17:01:00.820" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 17:01:05.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 17:01:05.649" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 17:01:05.650" starttime="20191113 17:01:00.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 17:01:05.651" level="INFO"></msg>
<status status="PASS" endtime="20191113 17:01:05.651" starttime="20191113 17:01:05.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 17:01:05.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 17:01:05.652" starttime="20191113 17:01:05.652"></status>
</kw>
<status status="PASS" endtime="20191113 17:01:05.653" starttime="20191113 17:01:00.817"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191113 17:01:05.653" critical="yes" starttime="20191113 17:00:56.037"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" endtime="20191113 17:01:05.654" starttime="20191113 17:00:03.100"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="1">Critical Tests</stat>
<stat fail="1" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="hadoop31-createmrenv" pass="1">hadoop31-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
