<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191108 13:50:02.086" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop27-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191108 13:50:02.147" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191108 13:50:04.827" level="INFO">${rc} = 255</msg>
<msg timestamp="20191108 13:50:04.827" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191108 13:50:04.827" starttime="20191108 13:50:02.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191108 13:50:04.829" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191108 13:50:04.829" starttime="20191108 13:50:04.828"></status>
</kw>
<msg timestamp="20191108 13:50:04.829" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191108 13:50:04.830" starttime="20191108 13:50:02.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191108 13:50:04.834" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191108 13:50:07.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20191108 13:50:07.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191108 13:50:07.274" starttime="20191108 13:50:04.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191108 13:50:07.276" level="INFO"></msg>
<status status="PASS" endtime="20191108 13:50:07.276" starttime="20191108 13:50:07.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191108 13:50:07.277" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191108 13:50:07.277" starttime="20191108 13:50:07.276"></status>
</kw>
<msg timestamp="20191108 13:50:07.278" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191108 13:50:07.278" starttime="20191108 13:50:04.831"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191108 13:50:07.279" starttime="20191108 13:50:07.278"></status>
</kw>
<status status="PASS" endtime="20191108 13:50:07.279" starttime="20191108 13:50:04.831"></status>
</kw>
<status status="PASS" endtime="20191108 13:50:07.279" starttime="20191108 13:50:04.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191108 13:50:07.286" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191108 13:50:09.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20191108 13:50:09.602" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191108 13:50:09.603" starttime="20191108 13:50:07.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191108 13:50:09.604" level="INFO"></msg>
<status status="PASS" endtime="20191108 13:50:09.604" starttime="20191108 13:50:09.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191108 13:50:09.604" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191108 13:50:09.605" starttime="20191108 13:50:09.604"></status>
</kw>
<status status="PASS" endtime="20191108 13:50:09.605" starttime="20191108 13:50:07.281"></status>
</kw>
<status status="PASS" endtime="20191108 13:50:09.605" starttime="20191108 13:50:07.280"></status>
</kw>
<status status="PASS" endtime="20191108 13:50:09.605" starttime="20191108 13:50:07.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191108 13:50:09.606" starttime="20191108 13:50:09.605"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191108 13:50:09.608" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191108 13:50:11.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20191108 13:50:11.839" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573221009533,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191108 13:50:11.840" starttime="20191108 13:50:09.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191108 13:50:11.841" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573221009533,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191108 13:50:11.842" starttime="20191108 13:50:11.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191108 13:50:11.843" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191108 13:50:11.843" starttime="20191108 13:50:11.842"></status>
</kw>
<msg timestamp="20191108 13:50:11.844" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573221009533,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191108 13:50:11.844" starttime="20191108 13:50:09.606"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191108 13:50:11.845" starttime="20191108 13:50:11.844"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191108 13:50:11.848" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191108 13:50:16.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20191108 13:50:16.925" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-th...</msg>
<status status="PASS" endtime="20191108 13:50:16.926" starttime="20191108 13:50:11.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191108 13:50:16.928" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191108 13:50:16.928" starttime="20191108 13:50:16.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191108 13:50:16.929" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191108 13:50:16.929" starttime="20191108 13:50:16.928"></status>
</kw>
<status status="PASS" endtime="20191108 13:50:16.930" starttime="20191108 13:50:11.845"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191108 13:50:16.930" critical="yes" starttime="20191108 13:50:02.141"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191108 13:50:16.935" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191108 13:50:19.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20191108 13:50:19.685" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191108 13:50:19.685" starttime="20191108 13:50:16.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191108 13:50:19.686" level="INFO"></msg>
<status status="PASS" endtime="20191108 13:50:19.686" starttime="20191108 13:50:19.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191108 13:50:19.687" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191108 13:50:19.687" starttime="20191108 13:50:19.686"></status>
</kw>
<status status="PASS" endtime="20191108 13:50:19.687" starttime="20191108 13:50:16.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191108 13:50:19.690" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191108 13:50:22.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20191108 13:50:22.456" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191108 13:50:22.456" starttime="20191108 13:50:19.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191108 13:50:22.458" level="INFO"></msg>
<status status="PASS" endtime="20191108 13:50:22.458" starttime="20191108 13:50:22.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191108 13:50:22.459" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191108 13:50:22.460" starttime="20191108 13:50:22.459"></status>
</kw>
<status status="PASS" endtime="20191108 13:50:22.460" starttime="20191108 13:50:19.687"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191108 13:50:22.460" critical="yes" starttime="20191108 13:50:16.931"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20191108 13:50:22.462" starttime="20191108 13:50:02.087"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="hadoop27-createmrenv" pass="2">hadoop27-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
