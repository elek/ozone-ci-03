<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191112 11:41:15.311" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozonesecure-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:15.371" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:15.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:15.377" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191112 11:41:15.377" starttime="20191112 11:41:15.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:15.378" level="INFO">scm</msg>
<status status="PASS" endtime="20191112 11:41:15.378" starttime="20191112 11:41:15.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:15.379" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:15.379" starttime="20191112 11:41:15.378"></status>
</kw>
<msg timestamp="20191112 11:41:15.379" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191112 11:41:15.379" starttime="20191112 11:41:15.369"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:15.382" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:15.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:15.398" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191112 11:41:15.398" starttime="20191112 11:41:15.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:15.399" level="INFO"></msg>
<status status="PASS" endtime="20191112 11:41:15.399" starttime="20191112 11:41:15.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:15.399" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:15.399" starttime="20191112 11:41:15.399"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:15.400" starttime="20191112 11:41:15.380"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:15.400" starttime="20191112 11:41:15.380"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:15.400" starttime="20191112 11:41:15.369"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:15.400" starttime="20191112 11:41:15.368"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:15.402" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:15.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:15.444" level="INFO">${output} = HTTP/1.1 401 Authentication required
Date: Tue, 12 Nov 2019 11:41:15 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191112 11:41:15.444" starttime="20191112 11:41:15.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:15.445" level="INFO">HTTP/1.1 401 Authentication required
Date: Tue, 12 Nov 2019 11:41:15 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 293

HTTP/1.1 200 OK
Date: Tue, 12 Nov 2019 11:41:15 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLZnxI3ax3KrNqtnQPL72vHJHERtGGOhZp43oG0vNTghUR7wybf/vA5e/fXgomyuBVkPWKu0kINCcGuNlhTB+OhOH
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1573594875434&amp;s=7fjsdfX+gQIHMWzRMD9ac6ogogynmRgshjBov64hJk8="; Path=/; HttpOnly
Last-Modified: Tue, 12 Nov 2019 10:59:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20191112 11:41:15.445" starttime="20191112 11:41:15.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:15.446" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:15.446" starttime="20191112 11:41:15.446"></status>
</kw>
<msg timestamp="20191112 11:41:15.447" level="INFO">${result} = HTTP/1.1 401 Authentication required
Date: Tue, 12 Nov 2019 11:41:15 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191112 11:41:15.447" starttime="20191112 11:41:15.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20191112 11:41:15.447" starttime="20191112 11:41:15.447"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:15.448" critical="yes" starttime="20191112 11:41:15.367"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:15.452" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:18.414" level="INFO">${rc} = 255</msg>
<msg timestamp="20191112 11:41:18.414" level="INFO">${output} = 2019-11-12 11:41:16,454 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-11-12 11:41:16,642 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s)...</msg>
<status status="PASS" endtime="20191112 11:41:18.415" starttime="20191112 11:41:15.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:18.416" level="INFO">2019-11-12 11:41:16,454 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-11-12 11:41:16,642 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2019-11-12 11:41:16,642 INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2019-11-12 11:41:18,357 ERROR client.OzoneClientFactory: Couldn't create RpcClient protocol exception: 
INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: DestHost:destPort scm:9860 , LocalHost:localPort om/172.18.0.7:0. Failed on local exception: java.io.IOException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Failed to find any Kerberos tgt)]
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.handleError(OzoneManagerProtocolClientSideTranslatorPB.java:758)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1249)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.hdds.tracing.TraceAllMethod.invoke(TraceAllMethod.java:66)
	at com.sun.proxy.$Proxy21.getServiceInfo(Unknown Source)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:156)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:256)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:239)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClient(OzoneClientFactory.java:75)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.init(RandomKeyGenerator.java:242)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.call(RandomKeyGenerator.java:264)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.call(RandomKeyGenerator.java:82)
	at picocli.CommandLine.execute(CommandLine.java:1173)
	at picocli.CommandLine.access$800(CommandLine.java:141)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1367)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1335)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1243)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:1526)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:1465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:65)
	at org.apache.hadoop.ozone.freon.Freon.execute(Freon.java:64)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:56)
	at org.apache.hadoop.ozone.freon.Freon.main(Freon.java:90)
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191112 11:41:18.416" starttime="20191112 11:41:18.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:18.417" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191112 11:41:18.417" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191112 11:41:18.417" starttime="20191112 11:41:18.416"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:18.417" starttime="20191112 11:41:15.449"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:18.418" critical="yes" starttime="20191112 11:41:15.448">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20191112 11:41:18.419" starttime="20191112 11:41:15.340"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191112 11:41:18.427" level="INFO">${random} = 23739</msg>
<status status="PASS" endtime="20191112 11:41:18.427" starttime="20191112 11:41:18.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191112 11:41:18.428" level="INFO">${prefix} = 23739</msg>
<status status="PASS" endtime="20191112 11:41:18.428" starttime="20191112 11:41:18.427"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:18.428" starttime="20191112 11:41:18.426"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:18.432" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:18.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:18.438" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191112 11:41:18.438" starttime="20191112 11:41:18.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:18.439" level="INFO">scm</msg>
<status status="PASS" endtime="20191112 11:41:18.439" starttime="20191112 11:41:18.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:18.440" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:18.440" starttime="20191112 11:41:18.440"></status>
</kw>
<msg timestamp="20191112 11:41:18.441" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191112 11:41:18.441" starttime="20191112 11:41:18.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191112 11:41:18.442" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191112 11:41:18.442" starttime="20191112 11:41:18.441"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:18.445" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:18.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:18.460" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191112 11:41:18.461" starttime="20191112 11:41:18.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:18.462" level="INFO"></msg>
<status status="PASS" endtime="20191112 11:41:18.462" starttime="20191112 11:41:18.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:18.462" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:18.462" starttime="20191112 11:41:18.462"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:18.463" starttime="20191112 11:41:18.443"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:18.463" starttime="20191112 11:41:18.443"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:18.463" starttime="20191112 11:41:18.430"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:18.463" starttime="20191112 11:41:18.429"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:18.466" level="INFO">Running command 'ozone sh volume info o3://om:9862/23739-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:20.658" level="INFO">${rc} = 255</msg>
<msg timestamp="20191112 11:41:20.658" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191112 11:41:20.658" starttime="20191112 11:41:18.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:20.660" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191112 11:41:20.660" starttime="20191112 11:41:20.659"></status>
</kw>
<msg timestamp="20191112 11:41:20.660" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191112 11:41:20.660" starttime="20191112 11:41:18.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<msg timestamp="20191112 11:41:20.662" level="FAIL">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20191112 11:41:20.662" starttime="20191112 11:41:20.661"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:20.662" starttime="20191112 11:41:18.463"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191112 11:41:20.663" critical="yes" starttime="20191112 11:41:18.428">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:20.668" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:20.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:20.675" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191112 11:41:20.675" starttime="20191112 11:41:20.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:20.677" level="INFO">scm</msg>
<status status="PASS" endtime="20191112 11:41:20.677" starttime="20191112 11:41:20.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:20.677" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:20.678" starttime="20191112 11:41:20.677"></status>
</kw>
<msg timestamp="20191112 11:41:20.678" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191112 11:41:20.678" starttime="20191112 11:41:20.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191112 11:41:20.679" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191112 11:41:20.679" starttime="20191112 11:41:20.678"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:20.683" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:20.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:20.699" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191112 11:41:20.699" starttime="20191112 11:41:20.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:20.700" level="INFO"></msg>
<status status="PASS" endtime="20191112 11:41:20.700" starttime="20191112 11:41:20.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:20.701" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:20.701" starttime="20191112 11:41:20.700"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:20.701" starttime="20191112 11:41:20.680"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:20.701" starttime="20191112 11:41:20.679"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:20.701" starttime="20191112 11:41:20.665"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:20.702" starttime="20191112 11:41:20.664"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:20.705" level="INFO">Running command 'ozone sh volume create o3://om:9862/23739-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:22.888" level="INFO">${rc} = 255</msg>
<msg timestamp="20191112 11:41:22.888" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191112 11:41:22.888" starttime="20191112 11:41:20.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:22.889" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191112 11:41:22.889" starttime="20191112 11:41:22.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:22.890" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191112 11:41:22.890" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191112 11:41:22.890" starttime="20191112 11:41:22.889"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:22.891" starttime="20191112 11:41:20.702"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:22.891" starttime="20191112 11:41:20.702"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191112 11:41:22.891" critical="yes" starttime="20191112 11:41:20.663">255 != 0</status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:22.896" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:22.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:22.903" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191112 11:41:22.903" starttime="20191112 11:41:22.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:22.904" level="INFO">scm</msg>
<status status="PASS" endtime="20191112 11:41:22.905" starttime="20191112 11:41:22.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:22.906" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:22.906" starttime="20191112 11:41:22.905"></status>
</kw>
<msg timestamp="20191112 11:41:22.906" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191112 11:41:22.906" starttime="20191112 11:41:22.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191112 11:41:22.907" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191112 11:41:22.908" starttime="20191112 11:41:22.907"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:22.911" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:22.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:22.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191112 11:41:22.926" starttime="20191112 11:41:22.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:22.927" level="INFO"></msg>
<status status="PASS" endtime="20191112 11:41:22.927" starttime="20191112 11:41:22.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:22.928" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:22.928" starttime="20191112 11:41:22.927"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:22.928" starttime="20191112 11:41:22.909"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:22.929" starttime="20191112 11:41:22.908"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:22.929" starttime="20191112 11:41:22.893"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:22.929" starttime="20191112 11:41:22.893"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:22.932" level="INFO">Running command 'ozone sh bucket create o3://om:9862/23739-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:25.022" level="INFO">${rc} = 255</msg>
<msg timestamp="20191112 11:41:25.022" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191112 11:41:25.022" starttime="20191112 11:41:22.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:25.024" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191112 11:41:25.024" starttime="20191112 11:41:25.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:25.025" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191112 11:41:25.026" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191112 11:41:25.026" starttime="20191112 11:41:25.024"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:25.026" starttime="20191112 11:41:22.930"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:25.026" starttime="20191112 11:41:22.929"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191112 11:41:25.027" critical="yes" starttime="20191112 11:41:22.892">255 != 0</status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:25.033" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:25.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:25.041" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191112 11:41:25.041" starttime="20191112 11:41:25.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:25.042" level="INFO">scm</msg>
<status status="PASS" endtime="20191112 11:41:25.042" starttime="20191112 11:41:25.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:25.043" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:25.043" starttime="20191112 11:41:25.043"></status>
</kw>
<msg timestamp="20191112 11:41:25.044" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191112 11:41:25.044" starttime="20191112 11:41:25.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191112 11:41:25.045" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191112 11:41:25.045" starttime="20191112 11:41:25.044"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:25.049" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:25.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:25.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191112 11:41:25.065" starttime="20191112 11:41:25.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:25.066" level="INFO"></msg>
<status status="PASS" endtime="20191112 11:41:25.066" starttime="20191112 11:41:25.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:25.067" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:25.068" starttime="20191112 11:41:25.067"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:25.068" starttime="20191112 11:41:25.046"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:25.068" starttime="20191112 11:41:25.045"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:25.068" starttime="20191112 11:41:25.029"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:25.069" starttime="20191112 11:41:25.029"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:25.073" level="INFO">Running command 'ozone sh key put o3://om:9862/23739-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:27.194" level="INFO">${rc} = 255</msg>
<msg timestamp="20191112 11:41:27.194" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191112 11:41:27.194" starttime="20191112 11:41:25.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:27.196" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191112 11:41:27.196" starttime="20191112 11:41:27.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:27.197" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191112 11:41:27.198" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191112 11:41:27.198" starttime="20191112 11:41:27.197"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:27.198" starttime="20191112 11:41:25.070"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:27.199" starttime="20191112 11:41:25.069"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191112 11:41:27.199" critical="yes" starttime="20191112 11:41:25.028">255 != 0</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:27.205" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:27.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:27.210" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191112 11:41:27.210" starttime="20191112 11:41:27.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:27.212" level="INFO">scm</msg>
<status status="PASS" endtime="20191112 11:41:27.212" starttime="20191112 11:41:27.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:27.212" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:27.213" starttime="20191112 11:41:27.212"></status>
</kw>
<msg timestamp="20191112 11:41:27.213" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191112 11:41:27.213" starttime="20191112 11:41:27.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191112 11:41:27.214" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191112 11:41:27.214" starttime="20191112 11:41:27.213"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:27.218" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:27.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:27.231" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191112 11:41:27.231" starttime="20191112 11:41:27.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:27.232" level="INFO"></msg>
<status status="PASS" endtime="20191112 11:41:27.232" starttime="20191112 11:41:27.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:27.233" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:27.233" starttime="20191112 11:41:27.232"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:27.233" starttime="20191112 11:41:27.215"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:27.234" starttime="20191112 11:41:27.215"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:27.234" starttime="20191112 11:41:27.202"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:27.234" starttime="20191112 11:41:27.201"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:27.237" level="INFO">Running command 'ozone sh volume info o3:///23739-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:29.330" level="INFO">${rc} = 255</msg>
<msg timestamp="20191112 11:41:29.330" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191112 11:41:29.330" starttime="20191112 11:41:27.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:29.331" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191112 11:41:29.331" starttime="20191112 11:41:29.330"></status>
</kw>
<msg timestamp="20191112 11:41:29.332" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191112 11:41:29.332" starttime="20191112 11:41:27.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<msg timestamp="20191112 11:41:29.333" level="FAIL">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20191112 11:41:29.333" starttime="20191112 11:41:29.332"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:29.333" starttime="20191112 11:41:27.234"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191112 11:41:29.333" critical="yes" starttime="20191112 11:41:27.200">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:29.338" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:29.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:29.343" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191112 11:41:29.343" starttime="20191112 11:41:29.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:29.344" level="INFO">scm</msg>
<status status="PASS" endtime="20191112 11:41:29.345" starttime="20191112 11:41:29.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:29.345" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:29.345" starttime="20191112 11:41:29.345"></status>
</kw>
<msg timestamp="20191112 11:41:29.346" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191112 11:41:29.346" starttime="20191112 11:41:29.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191112 11:41:29.347" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191112 11:41:29.347" starttime="20191112 11:41:29.346"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:29.350" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:29.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20191112 11:41:29.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191112 11:41:29.362" starttime="20191112 11:41:29.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:29.364" level="INFO"></msg>
<status status="PASS" endtime="20191112 11:41:29.364" starttime="20191112 11:41:29.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191112 11:41:29.365" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191112 11:41:29.366" starttime="20191112 11:41:29.365"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:29.366" starttime="20191112 11:41:29.347"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:29.366" starttime="20191112 11:41:29.347"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:29.367" starttime="20191112 11:41:29.335"></status>
</kw>
<status status="PASS" endtime="20191112 11:41:29.367" starttime="20191112 11:41:29.335"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191112 11:41:29.371" level="INFO">Running command 'ozone sh volume info /23739-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20191112 11:41:31.473" level="INFO">${rc} = 255</msg>
<msg timestamp="20191112 11:41:31.473" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191112 11:41:31.473" starttime="20191112 11:41:29.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191112 11:41:31.474" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol</msg>
<status status="PASS" endtime="20191112 11:41:31.474" starttime="20191112 11:41:31.474"></status>
</kw>
<msg timestamp="20191112 11:41:31.475" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191112 11:41:31.475" starttime="20191112 11:41:29.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<msg timestamp="20191112 11:41:31.477" level="FAIL">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20191112 11:41:31.477" starttime="20191112 11:41:31.475"></status>
</kw>
<status status="FAIL" endtime="20191112 11:41:31.478" starttime="20191112 11:41:29.367"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191112 11:41:31.478" critical="yes" starttime="20191112 11:41:29.334">'WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Couldn't create RpcClient protocol' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20191112 11:41:31.481" starttime="20191112 11:41:18.420"></status>
</suite>
<status status="FAIL" endtime="20191112 11:41:31.489" starttime="20191112 11:41:15.311"></status>
</suite>
<statistics>
<total>
<stat fail="7" pass="1">Critical Tests</stat>
<stat fail="7" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="7" id="s1" name="ozonesecure-basic" pass="1">ozonesecure-basic</stat>
<stat fail="1" id="s1-s1" name="Basic" pass="1">ozonesecure-basic.Basic</stat>
<stat fail="6" id="s1-s2" name="Ozone-Shell" pass="0">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
