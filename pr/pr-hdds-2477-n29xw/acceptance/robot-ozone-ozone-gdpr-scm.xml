<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191114 02:08:01.572" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/gdpr/gdpr.robot" id="s1" name="ozone-gdpr">
<kw type="setup" name="Generate volume">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191114 02:08:01.623" level="INFO">${random} = uzstk</msg>
<status status="PASS" endtime="20191114 02:08:01.623" starttime="20191114 02:08:01.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191114 02:08:01.624" level="INFO">${volume} = uzstk</msg>
<status status="PASS" endtime="20191114 02:08:01.624" starttime="20191114 02:08:01.623"></status>
</kw>
<status status="PASS" endtime="20191114 02:08:01.624" starttime="20191114 02:08:01.621"></status>
</kw>
<test id="s1-t1" name="Test GDPR disabled">
<kw name="Test GDPR(disabled) without explicit options">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 02:08:01.627" level="INFO">Running command 'ozone sh volume create /uzstk --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 02:08:03.230" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 02:08:03.231" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 02:08:03.231" starttime="20191114 02:08:01.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 02:08:03.233" level="INFO">om</msg>
<status status="PASS" endtime="20191114 02:08:03.233" starttime="20191114 02:08:03.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 02:08:03.235" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 02:08:03.235" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 02:08:03.236" starttime="20191114 02:08:03.234"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:03.236" starttime="20191114 02:08:01.625"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:03.237" starttime="20191114 02:08:01.624"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:03.237" critical="yes" starttime="20191114 02:08:01.624">255 != 0</status>
</test>
<test id="s1-t2" name="Test GDPR --enforcegdpr=true">
<kw name="Test GDPR with --enforcegdpr=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create --enforcegdpr=true /${volume}/mybucket2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 02:08:03.245" level="INFO">Running command 'ozone sh bucket create --enforcegdpr=true /uzstk/mybucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 02:08:04.629" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 02:08:04.629" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 02:08:04.629" starttime="20191114 02:08:03.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 02:08:04.630" level="INFO">om</msg>
<status status="PASS" endtime="20191114 02:08:04.630" starttime="20191114 02:08:04.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 02:08:04.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 02:08:04.632" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 02:08:04.632" starttime="20191114 02:08:04.631"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:04.632" starttime="20191114 02:08:03.241"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:04.632" starttime="20191114 02:08:03.240"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:04.632" critical="yes" starttime="20191114 02:08:03.238">255 != 0</status>
</test>
<test id="s1-t3" name="Test GDPR -g=true">
<kw name="Test GDPR with -g=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create -g=true /${volume}/mybucket3</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 02:08:04.636" level="INFO">Running command 'ozone sh bucket create -g=true /uzstk/mybucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 02:08:06.011" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 02:08:06.011" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 02:08:06.011" starttime="20191114 02:08:04.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 02:08:06.012" level="INFO">om</msg>
<status status="PASS" endtime="20191114 02:08:06.012" starttime="20191114 02:08:06.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 02:08:06.013" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 02:08:06.013" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 02:08:06.013" starttime="20191114 02:08:06.013"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:06.014" starttime="20191114 02:08:04.634"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:06.014" starttime="20191114 02:08:04.633"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:06.014" critical="yes" starttime="20191114 02:08:04.633">255 != 0</status>
</test>
<test id="s1-t4" name="Test GDPR -g=false">
<kw name="Test GDPR with -g=false">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/mybucket4</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 02:08:06.017" level="INFO">Running command 'ozone sh bucket create /uzstk/mybucket4 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 02:08:07.544" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 02:08:07.544" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 02:08:07.544" starttime="20191114 02:08:06.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 02:08:07.545" level="INFO">om</msg>
<status status="PASS" endtime="20191114 02:08:07.545" starttime="20191114 02:08:07.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 02:08:07.546" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 02:08:07.546" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 02:08:07.546" starttime="20191114 02:08:07.545"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:07.546" starttime="20191114 02:08:06.015"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:07.546" starttime="20191114 02:08:06.015"></status>
</kw>
<status status="FAIL" endtime="20191114 02:08:07.547" critical="yes" starttime="20191114 02:08:06.014">255 != 0</status>
</test>
<doc>Smoketest Ozone GDPR Feature</doc>
<status status="FAIL" endtime="20191114 02:08:07.548" starttime="20191114 02:08:01.573"></status>
</suite>
<statistics>
<total>
<stat fail="4" pass="0">Critical Tests</stat>
<stat fail="4" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="4" id="s1" name="ozone-gdpr" pass="0">ozone-gdpr</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
