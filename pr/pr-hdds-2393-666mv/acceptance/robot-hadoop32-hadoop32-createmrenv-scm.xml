<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191101 00:11:00.455" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop32-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191101 00:11:00.512" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191101 00:11:03.305" level="INFO">${rc} = 255</msg>
<msg timestamp="20191101 00:11:03.305" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191101 00:11:03.306" starttime="20191101 00:11:00.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191101 00:11:03.307" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191101 00:11:03.308" starttime="20191101 00:11:03.306"></status>
</kw>
<msg timestamp="20191101 00:11:03.308" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191101 00:11:03.308" starttime="20191101 00:11:00.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191101 00:11:03.312" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191101 00:11:05.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20191101 00:11:05.657" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191101 00:11:05.657" starttime="20191101 00:11:03.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191101 00:11:05.659" level="INFO"></msg>
<status status="PASS" endtime="20191101 00:11:05.659" starttime="20191101 00:11:05.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191101 00:11:05.660" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191101 00:11:05.661" starttime="20191101 00:11:05.660"></status>
</kw>
<msg timestamp="20191101 00:11:05.661" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191101 00:11:05.661" starttime="20191101 00:11:03.310"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191101 00:11:05.662" starttime="20191101 00:11:05.662"></status>
</kw>
<status status="PASS" endtime="20191101 00:11:05.663" starttime="20191101 00:11:03.309"></status>
</kw>
<status status="PASS" endtime="20191101 00:11:05.663" starttime="20191101 00:11:03.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191101 00:11:05.671" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191101 00:11:08.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20191101 00:11:08.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191101 00:11:08.348" starttime="20191101 00:11:05.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191101 00:11:08.350" level="INFO"></msg>
<status status="PASS" endtime="20191101 00:11:08.351" starttime="20191101 00:11:08.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191101 00:11:08.352" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191101 00:11:08.352" starttime="20191101 00:11:08.351"></status>
</kw>
<status status="PASS" endtime="20191101 00:11:08.353" starttime="20191101 00:11:05.665"></status>
</kw>
<status status="PASS" endtime="20191101 00:11:08.353" starttime="20191101 00:11:05.664"></status>
</kw>
<status status="PASS" endtime="20191101 00:11:08.354" starttime="20191101 00:11:05.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191101 00:11:08.355" starttime="20191101 00:11:08.354"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191101 00:11:08.359" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191101 00:11:10.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20191101 00:11:10.677" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1572567067835,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191101 00:11:10.677" starttime="20191101 00:11:08.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191101 00:11:10.679" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1572567067835,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191101 00:11:10.679" starttime="20191101 00:11:10.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191101 00:11:10.681" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191101 00:11:10.681" starttime="20191101 00:11:10.680"></status>
</kw>
<msg timestamp="20191101 00:11:10.682" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1572567067835,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191101 00:11:10.682" starttime="20191101 00:11:08.355"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191101 00:11:10.683" starttime="20191101 00:11:10.682"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191101 00:11:10.687" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191101 00:11:15.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20191101 00:11:15.597" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-th...</msg>
<status status="PASS" endtime="20191101 00:11:15.597" starttime="20191101 00:11:10.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191101 00:11:15.599" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191101 00:11:15.599" starttime="20191101 00:11:15.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191101 00:11:15.600" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191101 00:11:15.600" starttime="20191101 00:11:15.599"></status>
</kw>
<status status="PASS" endtime="20191101 00:11:15.601" starttime="20191101 00:11:10.683"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191101 00:11:15.601" critical="yes" starttime="20191101 00:11:00.509"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191101 00:11:15.607" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191101 00:11:18.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20191101 00:11:18.216" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191101 00:11:18.216" starttime="20191101 00:11:15.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191101 00:11:18.218" level="INFO"></msg>
<status status="PASS" endtime="20191101 00:11:18.218" starttime="20191101 00:11:18.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191101 00:11:18.219" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191101 00:11:18.219" starttime="20191101 00:11:18.218"></status>
</kw>
<status status="PASS" endtime="20191101 00:11:18.219" starttime="20191101 00:11:15.604"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191101 00:11:18.222" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191101 00:11:20.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20191101 00:11:20.920" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191101 00:11:20.920" starttime="20191101 00:11:18.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191101 00:11:20.922" level="INFO"></msg>
<status status="PASS" endtime="20191101 00:11:20.922" starttime="20191101 00:11:20.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191101 00:11:20.923" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191101 00:11:20.923" starttime="20191101 00:11:20.922"></status>
</kw>
<status status="PASS" endtime="20191101 00:11:20.924" starttime="20191101 00:11:18.220"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191101 00:11:20.924" critical="yes" starttime="20191101 00:11:15.602"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20191101 00:11:20.925" starttime="20191101 00:11:00.456"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="hadoop32-createmrenv" pass="2">hadoop32-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
