<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191113 19:49:28.849" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop32-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:49:28.921" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:49:31.447" level="INFO">${rc} = 255</msg>
<msg timestamp="20191113 19:49:31.447" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191113 19:49:31.447" starttime="20191113 19:49:28.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:49:31.448" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191113 19:49:31.449" starttime="20191113 19:49:31.448"></status>
</kw>
<msg timestamp="20191113 19:49:31.449" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191113 19:49:31.449" starttime="20191113 19:49:28.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:49:31.452" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:49:34.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:49:34.682" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 19:49:34.682" starttime="20191113 19:49:31.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:49:34.684" level="INFO"></msg>
<status status="PASS" endtime="20191113 19:49:34.684" starttime="20191113 19:49:34.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:49:34.685" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:49:34.686" starttime="20191113 19:49:34.685"></status>
</kw>
<msg timestamp="20191113 19:49:34.686" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191113 19:49:34.686" starttime="20191113 19:49:31.450"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191113 19:49:34.688" starttime="20191113 19:49:34.687"></status>
</kw>
<status status="PASS" endtime="20191113 19:49:34.688" starttime="20191113 19:49:31.450"></status>
</kw>
<status status="PASS" endtime="20191113 19:49:34.688" starttime="20191113 19:49:31.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:49:34.696" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:49:43.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:49:43.843" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 19:49:43.843" starttime="20191113 19:49:34.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:49:43.845" level="INFO"></msg>
<status status="PASS" endtime="20191113 19:49:43.846" starttime="20191113 19:49:43.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:49:43.847" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:49:43.848" starttime="20191113 19:49:43.846"></status>
</kw>
<status status="PASS" endtime="20191113 19:49:43.848" starttime="20191113 19:49:34.690"></status>
</kw>
<status status="PASS" endtime="20191113 19:49:43.849" starttime="20191113 19:49:34.689"></status>
</kw>
<status status="PASS" endtime="20191113 19:49:43.849" starttime="20191113 19:49:34.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191113 19:49:43.850" starttime="20191113 19:49:43.849"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:49:43.854" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:49:47.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:49:47.562" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573674576684,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191113 19:49:47.562" starttime="20191113 19:49:43.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:49:47.564" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573674576684,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191113 19:49:47.564" starttime="20191113 19:49:47.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:49:47.565" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:49:47.566" starttime="20191113 19:49:47.565"></status>
</kw>
<msg timestamp="20191113 19:49:47.566" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573674576684,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191113 19:49:47.566" starttime="20191113 19:49:43.851"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191113 19:49:47.567" starttime="20191113 19:49:47.567"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:49:47.571" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:49:52.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:49:52.607" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-th...</msg>
<status status="PASS" endtime="20191113 19:49:52.607" starttime="20191113 19:49:47.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:49:52.608" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191113 19:49:52.608" starttime="20191113 19:49:52.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:49:52.609" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:49:52.609" starttime="20191113 19:49:52.609"></status>
</kw>
<status status="PASS" endtime="20191113 19:49:52.609" starttime="20191113 19:49:47.568"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191113 19:49:52.610" critical="yes" starttime="20191113 19:49:28.917"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:49:52.613" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:49:55.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:49:55.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 19:49:55.050" starttime="20191113 19:49:52.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:49:55.051" level="INFO"></msg>
<status status="PASS" endtime="20191113 19:49:55.051" starttime="20191113 19:49:55.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:49:55.052" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:49:55.052" starttime="20191113 19:49:55.051"></status>
</kw>
<status status="PASS" endtime="20191113 19:49:55.053" starttime="20191113 19:49:52.611"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191113 19:49:55.055" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191113 19:49:57.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20191113 19:49:57.885" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191113 19:49:57.885" starttime="20191113 19:49:55.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191113 19:49:57.886" level="INFO"></msg>
<status status="PASS" endtime="20191113 19:49:57.887" starttime="20191113 19:49:57.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191113 19:49:57.888" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191113 19:49:57.888" starttime="20191113 19:49:57.887"></status>
</kw>
<status status="PASS" endtime="20191113 19:49:57.888" starttime="20191113 19:49:55.053"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191113 19:49:57.888" critical="yes" starttime="20191113 19:49:52.610"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20191113 19:49:57.890" starttime="20191113 19:49:28.853"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="hadoop32-createmrenv" pass="2">hadoop32-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
