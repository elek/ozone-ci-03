<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191111 19:45:17.835" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop27-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191111 19:45:18.031" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191111 19:45:21.649" level="INFO">${rc} = 255</msg>
<msg timestamp="20191111 19:45:21.649" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191111 19:45:21.649" starttime="20191111 19:45:18.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191111 19:45:21.651" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191111 19:45:21.652" starttime="20191111 19:45:21.650"></status>
</kw>
<msg timestamp="20191111 19:45:21.652" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191111 19:45:21.652" starttime="20191111 19:45:18.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191111 19:45:21.658" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191111 19:45:25.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20191111 19:45:25.138" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191111 19:45:25.138" starttime="20191111 19:45:21.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191111 19:45:25.140" level="INFO"></msg>
<status status="PASS" endtime="20191111 19:45:25.140" starttime="20191111 19:45:25.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191111 19:45:25.141" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191111 19:45:25.142" starttime="20191111 19:45:25.140"></status>
</kw>
<msg timestamp="20191111 19:45:25.142" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191111 19:45:25.142" starttime="20191111 19:45:21.655"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191111 19:45:25.143" starttime="20191111 19:45:25.143"></status>
</kw>
<status status="PASS" endtime="20191111 19:45:25.144" starttime="20191111 19:45:21.654"></status>
</kw>
<status status="PASS" endtime="20191111 19:45:25.144" starttime="20191111 19:45:21.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191111 19:45:25.152" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191111 19:45:29.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20191111 19:45:29.493" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191111 19:45:29.494" starttime="20191111 19:45:25.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191111 19:45:29.495" level="INFO"></msg>
<status status="PASS" endtime="20191111 19:45:29.495" starttime="20191111 19:45:29.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191111 19:45:29.496" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191111 19:45:29.496" starttime="20191111 19:45:29.495"></status>
</kw>
<status status="PASS" endtime="20191111 19:45:29.496" starttime="20191111 19:45:25.146"></status>
</kw>
<status status="PASS" endtime="20191111 19:45:29.496" starttime="20191111 19:45:25.145"></status>
</kw>
<status status="PASS" endtime="20191111 19:45:29.496" starttime="20191111 19:45:25.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191111 19:45:29.497" starttime="20191111 19:45:29.497"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191111 19:45:29.500" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191111 19:45:31.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20191111 19:45:31.718" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573501527225,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191111 19:45:31.718" starttime="20191111 19:45:29.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191111 19:45:31.720" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573501527225,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191111 19:45:31.720" starttime="20191111 19:45:31.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191111 19:45:31.720" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191111 19:45:31.721" starttime="20191111 19:45:31.720"></status>
</kw>
<msg timestamp="20191111 19:45:31.721" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573501527225,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191111 19:45:31.721" starttime="20191111 19:45:29.497"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191111 19:45:31.722" starttime="20191111 19:45:31.721"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191111 19:45:31.724" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191111 19:45:37.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20191111 19:45:37.597" level="INFO">${output} = INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191111 19:45:37.597" starttime="20191111 19:45:31.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191111 19:45:37.599" level="INFO">INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191111 19:45:37.599" starttime="20191111 19:45:37.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191111 19:45:37.600" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191111 19:45:37.600" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191111 19:45:37.601" starttime="20191111 19:45:37.599"></status>
</kw>
<status status="FAIL" endtime="20191111 19:45:37.601" starttime="20191111 19:45:31.722"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191111 19:45:37.601" critical="yes" starttime="20191111 19:45:18.026">255 != 0</status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191111 19:45:37.607" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191111 19:45:50.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20191111 19:45:50.700" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191111 19:45:50.700" starttime="20191111 19:45:37.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191111 19:45:50.702" level="INFO"></msg>
<status status="PASS" endtime="20191111 19:45:50.703" starttime="20191111 19:45:50.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191111 19:45:50.704" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191111 19:45:50.704" starttime="20191111 19:45:50.703"></status>
</kw>
<status status="PASS" endtime="20191111 19:45:50.705" starttime="20191111 19:45:37.603"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191111 19:45:50.708" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191111 19:45:54.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20191111 19:45:54.651" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191111 19:45:54.651" starttime="20191111 19:45:50.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191111 19:45:54.652" level="INFO"></msg>
<status status="PASS" endtime="20191111 19:45:54.652" starttime="20191111 19:45:54.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191111 19:45:54.653" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191111 19:45:54.653" starttime="20191111 19:45:54.653"></status>
</kw>
<status status="PASS" endtime="20191111 19:45:54.654" starttime="20191111 19:45:50.705"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191111 19:45:54.654" critical="yes" starttime="20191111 19:45:37.602"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" endtime="20191111 19:45:54.655" starttime="20191111 19:45:17.837"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="1">Critical Tests</stat>
<stat fail="1" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="hadoop27-createmrenv" pass="1">hadoop27-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
