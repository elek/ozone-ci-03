<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191114 07:05:58.651" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/gdpr/gdpr.robot" id="s1" name="ozone-gdpr">
<kw type="setup" name="Generate volume">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191114 07:05:58.702" level="INFO">${random} = aamjd</msg>
<status status="PASS" endtime="20191114 07:05:58.702" starttime="20191114 07:05:58.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191114 07:05:58.703" level="INFO">${volume} = aamjd</msg>
<status status="PASS" endtime="20191114 07:05:58.703" starttime="20191114 07:05:58.702"></status>
</kw>
<status status="PASS" endtime="20191114 07:05:58.703" starttime="20191114 07:05:58.700"></status>
</kw>
<test id="s1-t1" name="Test GDPR disabled">
<kw name="Test GDPR(disabled) without explicit options">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 07:05:58.706" level="INFO">Running command 'ozone sh volume create /aamjd --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 07:06:00.125" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 07:06:00.125" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 07:06:00.126" starttime="20191114 07:05:58.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 07:06:00.127" level="INFO">om</msg>
<status status="PASS" endtime="20191114 07:06:00.127" starttime="20191114 07:06:00.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 07:06:00.128" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 07:06:00.129" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 07:06:00.129" starttime="20191114 07:06:00.128"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:00.130" starttime="20191114 07:05:58.704"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:00.130" starttime="20191114 07:05:58.704"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:00.131" critical="yes" starttime="20191114 07:05:58.703">255 != 0</status>
</test>
<test id="s1-t2" name="Test GDPR --enforcegdpr=true">
<kw name="Test GDPR with --enforcegdpr=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create --enforcegdpr=true /${volume}/mybucket2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 07:06:00.137" level="INFO">Running command 'ozone sh bucket create --enforcegdpr=true /aamjd/mybucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 07:06:01.645" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 07:06:01.646" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 07:06:01.646" starttime="20191114 07:06:00.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 07:06:01.647" level="INFO">om</msg>
<status status="PASS" endtime="20191114 07:06:01.648" starttime="20191114 07:06:01.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 07:06:01.649" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 07:06:01.650" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 07:06:01.650" starttime="20191114 07:06:01.648"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:01.650" starttime="20191114 07:06:00.133"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:01.651" starttime="20191114 07:06:00.132"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:01.651" critical="yes" starttime="20191114 07:06:00.131">255 != 0</status>
</test>
<test id="s1-t3" name="Test GDPR -g=true">
<kw name="Test GDPR with -g=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create -g=true /${volume}/mybucket3</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 07:06:01.657" level="INFO">Running command 'ozone sh bucket create -g=true /aamjd/mybucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 07:06:03.131" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 07:06:03.131" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 07:06:03.131" starttime="20191114 07:06:01.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 07:06:03.133" level="INFO">om</msg>
<status status="PASS" endtime="20191114 07:06:03.133" starttime="20191114 07:06:03.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 07:06:03.134" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 07:06:03.134" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 07:06:03.135" starttime="20191114 07:06:03.133"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:03.135" starttime="20191114 07:06:01.654"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:03.135" starttime="20191114 07:06:01.653"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:03.136" critical="yes" starttime="20191114 07:06:01.652">255 != 0</status>
</test>
<test id="s1-t4" name="Test GDPR -g=false">
<kw name="Test GDPR with -g=false">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/mybucket4</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 07:06:03.142" level="INFO">Running command 'ozone sh bucket create /aamjd/mybucket4 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 07:06:04.610" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 07:06:04.610" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 07:06:04.610" starttime="20191114 07:06:03.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 07:06:04.612" level="INFO">om</msg>
<status status="PASS" endtime="20191114 07:06:04.612" starttime="20191114 07:06:04.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 07:06:04.613" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 07:06:04.614" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 07:06:04.614" starttime="20191114 07:06:04.612"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:04.614" starttime="20191114 07:06:03.139"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:04.614" starttime="20191114 07:06:03.138"></status>
</kw>
<status status="FAIL" endtime="20191114 07:06:04.615" critical="yes" starttime="20191114 07:06:03.137">255 != 0</status>
</test>
<doc>Smoketest Ozone GDPR Feature</doc>
<status status="FAIL" endtime="20191114 07:06:04.616" starttime="20191114 07:05:58.652"></status>
</suite>
<statistics>
<total>
<stat fail="4" pass="0">Critical Tests</stat>
<stat fail="4" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="4" id="s1" name="ozone-gdpr" pass="0">ozone-gdpr</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
