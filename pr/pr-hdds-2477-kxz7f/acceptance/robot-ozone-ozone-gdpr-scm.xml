<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191114 01:53:46.372" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/gdpr/gdpr.robot" id="s1" name="ozone-gdpr">
<kw type="setup" name="Generate volume">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191114 01:53:46.421" level="INFO">${random} = xnfoe</msg>
<status status="PASS" endtime="20191114 01:53:46.421" starttime="20191114 01:53:46.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191114 01:53:46.422" level="INFO">${volume} = xnfoe</msg>
<status status="PASS" endtime="20191114 01:53:46.422" starttime="20191114 01:53:46.422"></status>
</kw>
<status status="PASS" endtime="20191114 01:53:46.422" starttime="20191114 01:53:46.420"></status>
</kw>
<test id="s1-t1" name="Test GDPR disabled">
<kw name="Test GDPR(disabled) without explicit options">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 01:53:46.425" level="INFO">Running command 'ozone sh volume create /xnfoe --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 01:53:47.813" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 01:53:47.814" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 01:53:47.814" starttime="20191114 01:53:46.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 01:53:47.815" level="INFO">om</msg>
<status status="PASS" endtime="20191114 01:53:47.815" starttime="20191114 01:53:47.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 01:53:47.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 01:53:47.816" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 01:53:47.816" starttime="20191114 01:53:47.815"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:47.816" starttime="20191114 01:53:46.423"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:47.816" starttime="20191114 01:53:46.423"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:47.816" critical="yes" starttime="20191114 01:53:46.422">255 != 0</status>
</test>
<test id="s1-t2" name="Test GDPR --enforcegdpr=true">
<kw name="Test GDPR with --enforcegdpr=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create --enforcegdpr=true /${volume}/mybucket2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 01:53:47.820" level="INFO">Running command 'ozone sh bucket create --enforcegdpr=true /xnfoe/mybucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 01:53:49.200" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 01:53:49.201" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 01:53:49.201" starttime="20191114 01:53:47.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 01:53:49.203" level="INFO">om</msg>
<status status="PASS" endtime="20191114 01:53:49.203" starttime="20191114 01:53:49.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 01:53:49.204" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 01:53:49.205" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 01:53:49.205" starttime="20191114 01:53:49.203"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:49.205" starttime="20191114 01:53:47.818"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:49.206" starttime="20191114 01:53:47.817"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:49.206" critical="yes" starttime="20191114 01:53:47.817">255 != 0</status>
</test>
<test id="s1-t3" name="Test GDPR -g=true">
<kw name="Test GDPR with -g=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create -g=true /${volume}/mybucket3</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 01:53:49.212" level="INFO">Running command 'ozone sh bucket create -g=true /xnfoe/mybucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 01:53:50.718" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 01:53:50.718" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 01:53:50.718" starttime="20191114 01:53:49.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 01:53:50.720" level="INFO">om</msg>
<status status="PASS" endtime="20191114 01:53:50.720" starttime="20191114 01:53:50.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 01:53:50.721" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 01:53:50.722" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 01:53:50.722" starttime="20191114 01:53:50.720"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:50.722" starttime="20191114 01:53:49.209"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:50.723" starttime="20191114 01:53:49.208"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:50.723" critical="yes" starttime="20191114 01:53:49.207">255 != 0</status>
</test>
<test id="s1-t4" name="Test GDPR -g=false">
<kw name="Test GDPR with -g=false">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/mybucket4</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 01:53:50.729" level="INFO">Running command 'ozone sh bucket create /xnfoe/mybucket4 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 01:53:52.173" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 01:53:52.173" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 01:53:52.173" starttime="20191114 01:53:50.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 01:53:52.174" level="INFO">om</msg>
<status status="PASS" endtime="20191114 01:53:52.175" starttime="20191114 01:53:52.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 01:53:52.175" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 01:53:52.176" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 01:53:52.176" starttime="20191114 01:53:52.175"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:52.176" starttime="20191114 01:53:50.725"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:52.177" starttime="20191114 01:53:50.725"></status>
</kw>
<status status="FAIL" endtime="20191114 01:53:52.177" critical="yes" starttime="20191114 01:53:50.724">255 != 0</status>
</test>
<doc>Smoketest Ozone GDPR Feature</doc>
<status status="FAIL" endtime="20191114 01:53:52.179" starttime="20191114 01:53:46.373"></status>
</suite>
<statistics>
<total>
<stat fail="4" pass="0">Critical Tests</stat>
<stat fail="4" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="4" id="s1" name="ozone-gdpr" pass="0">ozone-gdpr</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
