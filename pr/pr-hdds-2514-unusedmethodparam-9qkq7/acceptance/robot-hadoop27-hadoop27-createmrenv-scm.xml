<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191115 19:57:49.792" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop27-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 19:57:49.867" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 19:57:53.393" level="INFO">${rc} = 255</msg>
<msg timestamp="20191115 19:57:53.393" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191115 19:57:53.394" starttime="20191115 19:57:49.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 19:57:53.396" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191115 19:57:53.396" starttime="20191115 19:57:53.394"></status>
</kw>
<msg timestamp="20191115 19:57:53.396" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191115 19:57:53.397" starttime="20191115 19:57:49.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 19:57:53.402" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 19:57:57.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 19:57:57.234" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191115 19:57:57.234" starttime="20191115 19:57:53.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 19:57:57.235" level="INFO"></msg>
<status status="PASS" endtime="20191115 19:57:57.236" starttime="20191115 19:57:57.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 19:57:57.236" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 19:57:57.237" starttime="20191115 19:57:57.236"></status>
</kw>
<msg timestamp="20191115 19:57:57.237" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191115 19:57:57.237" starttime="20191115 19:57:53.399"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191115 19:57:57.238" starttime="20191115 19:57:57.237"></status>
</kw>
<status status="PASS" endtime="20191115 19:57:57.238" starttime="20191115 19:57:53.398"></status>
</kw>
<status status="PASS" endtime="20191115 19:57:57.238" starttime="20191115 19:57:53.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 19:57:57.244" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 19:58:00.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 19:58:00.773" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191115 19:58:00.773" starttime="20191115 19:57:57.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 19:58:00.774" level="INFO"></msg>
<status status="PASS" endtime="20191115 19:58:00.774" starttime="20191115 19:58:00.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 19:58:00.775" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 19:58:00.775" starttime="20191115 19:58:00.775"></status>
</kw>
<status status="PASS" endtime="20191115 19:58:00.776" starttime="20191115 19:57:57.240"></status>
</kw>
<status status="PASS" endtime="20191115 19:58:00.776" starttime="20191115 19:57:57.239"></status>
</kw>
<status status="PASS" endtime="20191115 19:58:00.776" starttime="20191115 19:57:57.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191115 19:58:00.777" starttime="20191115 19:58:00.776"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 19:58:00.780" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 19:58:04.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 19:58:04.647" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573847879295,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191115 19:58:04.647" starttime="20191115 19:58:00.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 19:58:04.649" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573847879295,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191115 19:58:04.649" starttime="20191115 19:58:04.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 19:58:04.650" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 19:58:04.650" starttime="20191115 19:58:04.649"></status>
</kw>
<msg timestamp="20191115 19:58:04.651" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573847879295,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191115 19:58:04.651" starttime="20191115 19:58:00.777"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191115 19:58:04.652" starttime="20191115 19:58:04.651"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 19:58:04.655" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 19:58:06.804" level="INFO">${rc} = 255</msg>
<msg timestamp="20191115 19:58:06.804" level="INFO">${output} = INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191115 19:58:06.804" starttime="20191115 19:58:04.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 19:58:06.806" level="INFO">INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191115 19:58:06.806" starttime="20191115 19:58:06.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 19:58:06.806" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191115 19:58:06.807" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191115 19:58:06.807" starttime="20191115 19:58:06.806"></status>
</kw>
<status status="FAIL" endtime="20191115 19:58:06.807" starttime="20191115 19:58:04.652"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191115 19:58:06.807" critical="yes" starttime="20191115 19:57:49.863">255 != 0</status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 19:58:06.811" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 19:58:10.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 19:58:10.228" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191115 19:58:10.228" starttime="20191115 19:58:06.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 19:58:10.229" level="INFO"></msg>
<status status="PASS" endtime="20191115 19:58:10.230" starttime="20191115 19:58:10.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 19:58:10.230" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 19:58:10.231" starttime="20191115 19:58:10.230"></status>
</kw>
<status status="PASS" endtime="20191115 19:58:10.231" starttime="20191115 19:58:06.809"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 19:58:10.234" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 19:58:16.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 19:58:16.256" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191115 19:58:16.256" starttime="20191115 19:58:10.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 19:58:16.258" level="INFO"></msg>
<status status="PASS" endtime="20191115 19:58:16.258" starttime="20191115 19:58:16.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 19:58:16.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 19:58:16.259" starttime="20191115 19:58:16.258"></status>
</kw>
<status status="PASS" endtime="20191115 19:58:16.260" starttime="20191115 19:58:10.231"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191115 19:58:16.260" critical="yes" starttime="20191115 19:58:06.808"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" endtime="20191115 19:58:16.262" starttime="20191115 19:57:49.794"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="1">Critical Tests</stat>
<stat fail="1" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="hadoop27-createmrenv" pass="1">hadoop27-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
