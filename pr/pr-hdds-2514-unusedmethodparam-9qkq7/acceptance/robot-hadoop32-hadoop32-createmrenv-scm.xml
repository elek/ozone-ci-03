<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191115 20:11:30.978" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop32-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 20:11:31.036" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 20:11:34.529" level="INFO">${rc} = 255</msg>
<msg timestamp="20191115 20:11:34.530" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191115 20:11:34.530" starttime="20191115 20:11:31.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 20:11:34.531" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191115 20:11:34.531" starttime="20191115 20:11:34.530"></status>
</kw>
<msg timestamp="20191115 20:11:34.531" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191115 20:11:34.531" starttime="20191115 20:11:31.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 20:11:34.535" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 20:11:38.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 20:11:38.751" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191115 20:11:38.751" starttime="20191115 20:11:34.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 20:11:38.753" level="INFO"></msg>
<status status="PASS" endtime="20191115 20:11:38.753" starttime="20191115 20:11:38.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 20:11:38.754" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 20:11:38.755" starttime="20191115 20:11:38.754"></status>
</kw>
<msg timestamp="20191115 20:11:38.755" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191115 20:11:38.755" starttime="20191115 20:11:34.533"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191115 20:11:38.757" starttime="20191115 20:11:38.756"></status>
</kw>
<status status="PASS" endtime="20191115 20:11:38.757" starttime="20191115 20:11:34.532"></status>
</kw>
<status status="PASS" endtime="20191115 20:11:38.757" starttime="20191115 20:11:34.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 20:11:38.765" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 20:11:49.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 20:11:49.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191115 20:11:49.377" starttime="20191115 20:11:38.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 20:11:49.379" level="INFO"></msg>
<status status="PASS" endtime="20191115 20:11:49.379" starttime="20191115 20:11:49.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 20:11:49.379" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 20:11:49.379" starttime="20191115 20:11:49.379"></status>
</kw>
<status status="PASS" endtime="20191115 20:11:49.380" starttime="20191115 20:11:38.759"></status>
</kw>
<status status="PASS" endtime="20191115 20:11:49.380" starttime="20191115 20:11:38.759"></status>
</kw>
<status status="PASS" endtime="20191115 20:11:49.380" starttime="20191115 20:11:38.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191115 20:11:49.381" starttime="20191115 20:11:49.380"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 20:11:49.383" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 20:11:52.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 20:11:52.233" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573848700743,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191115 20:11:52.233" starttime="20191115 20:11:49.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 20:11:52.234" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573848700743,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191115 20:11:52.234" starttime="20191115 20:11:52.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 20:11:52.235" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 20:11:52.236" starttime="20191115 20:11:52.235"></status>
</kw>
<msg timestamp="20191115 20:11:52.236" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1573848700743,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191115 20:11:52.236" starttime="20191115 20:11:49.381"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191115 20:11:52.237" starttime="20191115 20:11:52.236"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 20:11:52.240" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 20:11:59.408" level="INFO">${rc} = 255</msg>
<msg timestamp="20191115 20:11:59.408" level="INFO">${output} = INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191115 20:11:59.408" starttime="20191115 20:11:52.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 20:11:59.410" level="INFO">INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" endtime="20191115 20:11:59.410" starttime="20191115 20:11:59.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 20:11:59.411" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191115 20:11:59.411" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191115 20:11:59.412" starttime="20191115 20:11:59.410"></status>
</kw>
<status status="FAIL" endtime="20191115 20:11:59.412" starttime="20191115 20:11:52.237"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191115 20:11:59.412" critical="yes" starttime="20191115 20:11:31.032">255 != 0</status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 20:11:59.417" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 20:12:10.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 20:12:10.432" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191115 20:12:10.432" starttime="20191115 20:11:59.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 20:12:10.433" level="INFO"></msg>
<status status="PASS" endtime="20191115 20:12:10.433" starttime="20191115 20:12:10.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 20:12:10.434" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 20:12:10.434" starttime="20191115 20:12:10.433"></status>
</kw>
<status status="PASS" endtime="20191115 20:12:10.434" starttime="20191115 20:11:59.414"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191115 20:12:10.437" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191115 20:12:13.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20191115 20:12:13.503" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191115 20:12:13.503" starttime="20191115 20:12:10.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191115 20:12:13.504" level="INFO"></msg>
<status status="PASS" endtime="20191115 20:12:13.504" starttime="20191115 20:12:13.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191115 20:12:13.505" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191115 20:12:13.505" starttime="20191115 20:12:13.505"></status>
</kw>
<status status="PASS" endtime="20191115 20:12:13.505" starttime="20191115 20:12:10.434"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191115 20:12:13.506" critical="yes" starttime="20191115 20:11:59.413"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" endtime="20191115 20:12:13.507" starttime="20191115 20:11:30.979"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="1">Critical Tests</stat>
<stat fail="1" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="hadoop32-createmrenv" pass="1">hadoop32-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
