<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191114 01:14:10.024" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/gdpr/gdpr.robot" id="s1" name="ozone-gdpr">
<kw type="setup" name="Generate volume">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191114 01:14:10.075" level="INFO">${random} = suoej</msg>
<status status="PASS" endtime="20191114 01:14:10.075" starttime="20191114 01:14:10.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191114 01:14:10.075" level="INFO">${volume} = suoej</msg>
<status status="PASS" endtime="20191114 01:14:10.076" starttime="20191114 01:14:10.075"></status>
</kw>
<status status="PASS" endtime="20191114 01:14:10.076" starttime="20191114 01:14:10.073"></status>
</kw>
<test id="s1-t1" name="Test GDPR disabled">
<kw name="Test GDPR(disabled) without explicit options">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 01:14:10.079" level="INFO">Running command 'ozone sh volume create /suoej --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 01:14:11.585" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 01:14:11.585" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 01:14:11.585" starttime="20191114 01:14:10.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 01:14:11.587" level="INFO">om</msg>
<status status="PASS" endtime="20191114 01:14:11.587" starttime="20191114 01:14:11.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 01:14:11.588" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 01:14:11.588" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 01:14:11.588" starttime="20191114 01:14:11.587"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:11.589" starttime="20191114 01:14:10.077"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:11.589" starttime="20191114 01:14:10.076"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:11.589" critical="yes" starttime="20191114 01:14:10.076">255 != 0</status>
</test>
<test id="s1-t2" name="Test GDPR --enforcegdpr=true">
<kw name="Test GDPR with --enforcegdpr=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create --enforcegdpr=true /${volume}/mybucket2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 01:14:11.594" level="INFO">Running command 'ozone sh bucket create --enforcegdpr=true /suoej/mybucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 01:14:12.962" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 01:14:12.962" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 01:14:12.962" starttime="20191114 01:14:11.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 01:14:12.963" level="INFO">om</msg>
<status status="PASS" endtime="20191114 01:14:12.963" starttime="20191114 01:14:12.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 01:14:12.964" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 01:14:12.965" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 01:14:12.965" starttime="20191114 01:14:12.964"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:12.965" starttime="20191114 01:14:11.592"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:12.965" starttime="20191114 01:14:11.591"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:12.965" critical="yes" starttime="20191114 01:14:11.590">255 != 0</status>
</test>
<test id="s1-t3" name="Test GDPR -g=true">
<kw name="Test GDPR with -g=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create -g=true /${volume}/mybucket3</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 01:14:12.968" level="INFO">Running command 'ozone sh bucket create -g=true /suoej/mybucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 01:14:14.449" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 01:14:14.449" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 01:14:14.449" starttime="20191114 01:14:12.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 01:14:14.451" level="INFO">om</msg>
<status status="PASS" endtime="20191114 01:14:14.451" starttime="20191114 01:14:14.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 01:14:14.452" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 01:14:14.452" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 01:14:14.452" starttime="20191114 01:14:14.451"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:14.453" starttime="20191114 01:14:12.967"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:14.453" starttime="20191114 01:14:12.966"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:14.453" critical="yes" starttime="20191114 01:14:12.966">255 != 0</status>
</test>
<test id="s1-t4" name="Test GDPR -g=false">
<kw name="Test GDPR with -g=false">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/mybucket4</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191114 01:14:14.458" level="INFO">Running command 'ozone sh bucket create /suoej/mybucket4 2&gt;&amp;1'.</msg>
<msg timestamp="20191114 01:14:15.962" level="INFO">${rc} = 255</msg>
<msg timestamp="20191114 01:14:15.962" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20191114 01:14:15.963" starttime="20191114 01:14:14.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191114 01:14:15.964" level="INFO">om</msg>
<status status="PASS" endtime="20191114 01:14:15.964" starttime="20191114 01:14:15.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191114 01:14:15.965" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191114 01:14:15.966" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191114 01:14:15.966" starttime="20191114 01:14:15.965"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:15.966" starttime="20191114 01:14:14.455"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:15.966" starttime="20191114 01:14:14.454"></status>
</kw>
<status status="FAIL" endtime="20191114 01:14:15.967" critical="yes" starttime="20191114 01:14:14.454">255 != 0</status>
</test>
<doc>Smoketest Ozone GDPR Feature</doc>
<status status="FAIL" endtime="20191114 01:14:15.968" starttime="20191114 01:14:10.025"></status>
</suite>
<statistics>
<total>
<stat fail="4" pass="0">Critical Tests</stat>
<stat fail="4" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="4" id="s1" name="ozone-gdpr" pass="0">ozone-gdpr</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
