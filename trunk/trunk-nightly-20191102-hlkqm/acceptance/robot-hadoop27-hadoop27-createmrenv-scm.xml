<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191102 03:13:32.146" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop27-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191102 03:13:32.214" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191102 03:13:35.012" level="INFO">${rc} = 255</msg>
<msg timestamp="20191102 03:13:35.013" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191102 03:13:35.013" starttime="20191102 03:13:32.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191102 03:13:35.015" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191102 03:13:35.015" starttime="20191102 03:13:35.014"></status>
</kw>
<msg timestamp="20191102 03:13:35.016" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191102 03:13:35.016" starttime="20191102 03:13:32.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191102 03:13:35.021" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191102 03:13:41.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20191102 03:13:41.366" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191102 03:13:41.366" starttime="20191102 03:13:35.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191102 03:13:41.368" level="INFO"></msg>
<status status="PASS" endtime="20191102 03:13:41.368" starttime="20191102 03:13:41.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191102 03:13:41.370" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191102 03:13:41.370" starttime="20191102 03:13:41.369"></status>
</kw>
<msg timestamp="20191102 03:13:41.371" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191102 03:13:41.371" starttime="20191102 03:13:35.018"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191102 03:13:41.372" starttime="20191102 03:13:41.371"></status>
</kw>
<status status="PASS" endtime="20191102 03:13:41.372" starttime="20191102 03:13:35.017"></status>
</kw>
<status status="PASS" endtime="20191102 03:13:41.372" starttime="20191102 03:13:35.016"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191102 03:13:41.381" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191102 03:13:43.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20191102 03:13:43.741" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191102 03:13:43.741" starttime="20191102 03:13:41.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191102 03:13:43.743" level="INFO"></msg>
<status status="PASS" endtime="20191102 03:13:43.743" starttime="20191102 03:13:43.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191102 03:13:43.745" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191102 03:13:43.745" starttime="20191102 03:13:43.744"></status>
</kw>
<status status="PASS" endtime="20191102 03:13:43.746" starttime="20191102 03:13:41.375"></status>
</kw>
<status status="PASS" endtime="20191102 03:13:43.746" starttime="20191102 03:13:41.374"></status>
</kw>
<status status="PASS" endtime="20191102 03:13:43.746" starttime="20191102 03:13:41.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191102 03:13:43.748" starttime="20191102 03:13:43.747"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191102 03:13:43.752" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191102 03:13:46.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20191102 03:13:46.004" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1572664423634,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191102 03:13:46.004" starttime="20191102 03:13:43.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191102 03:13:46.006" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1572664423634,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191102 03:13:46.007" starttime="20191102 03:13:46.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191102 03:13:46.008" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191102 03:13:46.008" starttime="20191102 03:13:46.007"></status>
</kw>
<msg timestamp="20191102 03:13:46.009" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1572664423634,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191102 03:13:46.009" starttime="20191102 03:13:43.748"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191102 03:13:46.010" starttime="20191102 03:13:46.009"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191102 03:13:46.013" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191102 03:13:55.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20191102 03:13:55.668" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-th...</msg>
<status status="PASS" endtime="20191102 03:13:55.668" starttime="20191102 03:13:46.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191102 03:13:55.670" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191102 03:13:55.670" starttime="20191102 03:13:55.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191102 03:13:55.671" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191102 03:13:55.671" starttime="20191102 03:13:55.670"></status>
</kw>
<status status="PASS" endtime="20191102 03:13:55.672" starttime="20191102 03:13:46.010"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191102 03:13:55.672" critical="yes" starttime="20191102 03:13:32.210"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191102 03:13:55.676" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191102 03:13:58.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20191102 03:13:58.567" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191102 03:13:58.567" starttime="20191102 03:13:55.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191102 03:13:58.569" level="INFO"></msg>
<status status="PASS" endtime="20191102 03:13:58.569" starttime="20191102 03:13:58.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191102 03:13:58.570" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191102 03:13:58.571" starttime="20191102 03:13:58.570"></status>
</kw>
<status status="PASS" endtime="20191102 03:13:58.571" starttime="20191102 03:13:55.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191102 03:13:58.575" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191102 03:14:01.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20191102 03:14:01.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191102 03:14:01.401" starttime="20191102 03:13:58.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191102 03:14:01.402" level="INFO"></msg>
<status status="PASS" endtime="20191102 03:14:01.402" starttime="20191102 03:14:01.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191102 03:14:01.403" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191102 03:14:01.403" starttime="20191102 03:14:01.403"></status>
</kw>
<status status="PASS" endtime="20191102 03:14:01.404" starttime="20191102 03:13:58.572"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191102 03:14:01.404" critical="yes" starttime="20191102 03:13:55.673"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20191102 03:14:01.405" starttime="20191102 03:13:32.147"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="hadoop27-createmrenv" pass="2">hadoop27-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
